openapi: '3.0.2'
info:
  title: Fabric API 
  version: '1.0'
servers:
  - url: http://localhost:1337

components:
  schemas:
      memberEnrollmentResponse:
        type: object
        properties:
          message: 
            type: string
          privateKey:
            description: generated private RSA-Key
            type: string
      certificateRequestResponse:
        type: object
        properties:
          memberKey: 
            description: public RSA-Key for the member 
            type: string
      newInvoice:
        type: object
        properties:
          invoiceno: 
            type: string
          sender:
            type: string
          receiver:
            type: string
          encryptedData:
            type: string
          key:
            type: string
          iv:
            type: string
      listOfInvoices:
        type: array
        items: 
          type: object
          properties:
            Key: 
              type: string
            Record: 
              $ref: '#/components/schemas/invoice' 
      invoice:
        type: object
        properties:
          processor: 
            type: string
          receiver:
            type: string
          sender:
            type: string
          status:
            type: string
      invoiceStatus:
        type: object
        properties:
          status:
            type: string
      privateData:
        type: object
        properties:
          encryptedData:
            type: string
          iv:
            type: string
          key:
            type: string
      invoiceResponse:
        type: object
        properties:
          invoice:
            $ref: '#/components/schemas/invoice' 
          privateData:
            $ref: '#/components/schemas/privateData' 
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

paths:
  /members/certificate/{memberId}:
    get:
      description: get the public key for a member
      parameters:
        - in: path
          name: memberId
          schema:
            type: string
          required: true
          description: unique Id of a member
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateRequestResponse' 
        '400':
          description: Processing error
  /members/enroll/{memberId}:
    post:
      description: enroll a new member 
      parameters:
        - in: path
          name: memberId
          schema:
            type: string
          required: true
          description: unique Id of a member
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/memberEnrollmentResponse' 
        '400':
          description: Processing error
  /invoices/list:
    get:
      description: get all invoices for the account  
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listOfInvoices' 
        '400':
          description: Processing error
  /invoices/new:        
    post:
      description: add an invoice to the ledger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newInvoice' 
      responses:
        '200':
          description: OK
        '400':
          description: Processing error

  /invoice/{invoiceId}:
    get:
      description: get an invoice
      parameters:
        - in: path
          name: invoiceId
          schema:
            type: string
          required: true
          description: unique Id of an invoice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoiceResponse' 
        '400':
          description: Processing error
    post: 
      description: update an invoice
      parameters:
        - in: path
          name: invoiceId
          schema:
            type: string
          required: true
          description: unique Id of an invoice  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoiceStatus'
      responses:
        '200':
          description: OK
        '400':
          description: Processing error

    delete:
      description: delete an invoice
      parameters:
        - in: path
          name: invoiceId
          schema:
            type: string
          required: true
          description: unique Id of an invoice  
      responses:
        '200':
          description: OK
        '400':
          description: Processing error

security:
  - basicAuth: []




